openapi: 3.1.0
info:
  title: Resource Management API
  description: API for managing resources such as projects, tasks, and users.
  version: 1.0.0
servers:
  - url: https://api.resource-manager.com/v1
    description: Production server
  - url: https://sandbox.resource-manager.com/v1
    description: Sandbox server
paths:
  /users:
    get:
      summary: List all users
      description: Retrieve a list of all registered users.
      responses:
        '200':
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Add a new user to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: User created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: Get user details
      description: Retrieve details for a specific user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the user.
      responses:
        '200':
          description: User details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      description: Update information for a specific user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: User updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      description: Remove a user from the system.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the user.
      responses:
        '204':
          description: User deleted successfully.

  /tasks:
    get:
      summary: List all tasks
      description: Retrieve a list of all tasks with optional filtering.
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, in-progress, completed]
            description: Filter tasks by status.
        - name: user_id
          in: query
          schema:
            type: string
            description: Filter tasks by the associated user ID.
      responses:
        '200':
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      description: Add a new task to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '201':
          description: Task created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    get:
      summary: Get task details
      description: Retrieve details for a specific task.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the task.
      responses:
        '200':
          description: Task details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      summary: Update a task
      description: Update information for a specific task.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the task.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskInput'
      responses:
        '200':
          description: Task updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    delete:
      summary: Delete a task
      description: Remove a task from the system.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the task.
      responses:
        '204':
          description: Task deleted successfully.

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      required:
        - name
        - email
    Task:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [pending, in-progress, completed]
        user_id:
          type: string
    TaskInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [pending, in-progress, completed]
        user_id:
          type: string
      required:
        - title
        - status

